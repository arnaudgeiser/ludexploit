(ns ludexploit.service
  (:require [ludexploit.data-access :as da]
            [ludexploit.cloud-messaging :as cm]))

(defn create-game [game]
  (do
    (da/create-game game)
    (let [{name :name nbplayers :nbplayers} game
          message (str nbplayers " joueurs recherchÃ©s")]
    (cm/send-game {:body message :title name :message message}))))

(defn subscribe-event [event_id user_id]
  (let [{name :name} (da/search-user-by-id user_id)
        has-reservations (da/has-reservations {:user_id user_id :event_id event_id})]
      (if (not has-reservations)
        (do
          (da/create-reservation {:event_id event_id :user_id user_id :reservation {:name name}})
          {:result true})
        {:result false})))

(defn unsubscribe-event [event_id user_id]
  (da/remove-reservation {:event_id event_id :user_id user_id}))
